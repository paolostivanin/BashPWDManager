#!/bin/bash

#################################################################
# @Author: Paolo Stivanin aka Polslinux
# @Name: Bash Password Manager
# @Copyright: 2011
# @Site: http://www.polslinux.it
# @License: GNU AGPL v3 http://www.gnu.org/licenses/agpl.html
#################################################################

IFS=$'\n'
version="0.1-alpha2"
user=`id -u`

function check_db(){
file_db=`zenity --file-selection --title "Scegli percorso database"`
crypto_algo=`cat /home/$USER/.bpwdman | cut -f1 -d' '`
path_db=`dirname $file_db`
permission=`ls -l $file_db | cut -f2 -d'-'`
if [ ! -f $file_db ] || [ "$permission" != "rw" ]; then
echo "Il database non esiste oppure non ha i permessi read/write."
exit 1
fi
}

function decrypt_db(){
gpg -o out_db --cipher-algo=$crypto_algo -d $file_db
mv $path_db/out_db $file_db
}

function input_info(){
username=`zenity --entry --title "Username" --text "Inserisci nome utente"`
password=`zenity --entry --hide-text --title "Password" --text "Inserisci password"`
echo $username >> $file_db
echo $password >> $file_db
echo "-------------------------------" >> $file_db
}

function encrypt_db(){
gpg -o $path_db/enc_db --cipher-algo=$crypto_algo -c $file_db
mv $path_db/enc_db -c $file_db
}

function fine_prog(){
unset username
unset password
unset file_db
unset path_db
unset IFS
}

if [ "$1" == "-v" ] ; then
echo "Bash Password Manager version $version"
exit 0
fi

if [ "$user" = 0 ] ; then
zenity --error --text "You are root, start the script as NORMAL user"
exit 1
fi

if [ ! -f /home/$USER/.bpwdman ] ; then
typ=$(zenity  --list  --text "What type of cypher algo do you want to use?" --radiolist  --column "Choice" --column "Type" TRUE CAST5 FALSE 3DES FALSE AES256 FALSE TWOFISH FALSE BLOWFISH)
echo $typ  | tr '[A-Z]' '[a-z]' >> /home/$USER/.bpwdman
fi

check_db
decrypt_db
input_info
crypt_db
fine_prog
